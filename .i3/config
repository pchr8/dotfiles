# i3 config file (v5)
#
#
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l
set $ms Mod4
set $alt Mod1
set $ctr Mod3

# use Mouse+$ms to drag floating windows to their wanted position
floating_modifier $ms

# start a terminal
bindsym $ms+Return exec i3-sensible-terminal

# kill focused window
bindsym $ms+x kill

# start dmenu (a program launcher)
#bindsym $ms+r exec dmenu_run
#bindsym $ms+r exec synapse
bindsym $ms+r exec rofi -show run

# start dmenu (a program launcher)
bindsym $ms+d exec --no-startup-id i3-dmenu-desktop

# lock
#bindsym $ms+n exec i3lock -i ~/s/bg/lyudka.png -t
#bindsym $ms+n exec i3lock -i ~/s/bg/mss.png -t
bindsym $ms+n exec ~/s/lock.sh

# change focus
bindsym $ms+$left focus left
bindsym $ms+$down focus down
bindsym $ms+$up focus up
bindsym $ms+$right focus right

bindsym $ms+u focus right
bindsym $ms+apostrophe focus left

# move focused window
bindsym $ms+Shift+$left move left
bindsym $ms+Shift+$down move down
bindsym $ms+Shift+$up move up
bindsym $ms+Shift+$right move right

bindsym $ms+Shift+u move right
bindsym $ms+Shift+apostrophe move left

# enter fullscreen mode for the focused container
bindsym $ms+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $ms+s layout stacking
bindsym $ms+w layout tabbed
bindsym $ms+e layout toggle split

# toggle tiling / floating
bindsym $ms+Shift+space floating toggle

# split in horizontal orientation
bindsym Mod3+Shift+h split h
# split in vertical orientation
bindsym Mod3+Shift+v split v

# change focus between tiling / floating windows
bindsym $ms+space focus mode_toggle

# move the currently focused window to the scratchpad
bindsym $ms+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $ms+minus  scratchpad show
# bindsym $ms+t [instance="todo"] scratchpad show

# reload the configuration file
bindsym $ms+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $ms+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym Mod3+r mode "resize"

# On big screen
bar {
    output HDMI-0
    status_command i3status --config=~/.i3/i3status
	#workspace_buttons no
	strip_workspace_numbers no
	#mode hide
	modifier $ms
	position bottom
}

# On notebook screen
bar {
    output eDP
    status_command i3status --config=~/.i3/i3status-small | ~/.i3/wrapper.py
    strip_workspace_numbers yes
    mode hide
    modifier $ms
    position bottom
    output_format="i3bar"
}

# On VGA (why not)
bar {
    output VGA-0
    status_command i3status --config=~/.i3/i3status-small | ~/.i3/wrapper.py
    strip_workspace_numbers yes
    mode hide
    modifier $ms
    position bottom
    output_format="i3bar"
}

#SH 

bindsym $ms+b border toggle
bindsym $ms+c exec python /home/sh/s/t/focus-last.py --switch


# switch to workspace
bindsym $ms+1 workspace 1
bindsym $ms+2 workspace 2
bindsym $ms+3 workspace 3
bindsym $ms+4 workspace 4
bindsym $ms+5 workspace 5
bindsym $ms+6 workspace 6
bindsym $ms+7 workspace 7
bindsym $ms+8 workspace 8
bindsym $ms+9 workspace 9
bindsym $ms+0 workspace 10

# move focused container to workspace
bindsym $ms+Shift+1 move container to workspace 1
bindsym $ms+Shift+2 move container to workspace 2
bindsym $ms+Shift+3 move container to workspace 3
bindsym $ms+Shift+4 move container to workspace 4
bindsym $ms+Shift+5 move container to workspace 5
bindsym $ms+Shift+6 move container to workspace 6
bindsym $ms+Shift+7 move container to workspace 7
bindsym $ms+Shift+8 move container to workspace 8
bindsym $ms+Shift+9 move container to workspace 9
bindsym $ms+Shift+0 move container to workspace 10

#additional workspaces
#bindsym $ms+apostrophe workspace 11
bindsym $ms+comma workspace 12:ﬃ 
bindsym $ms+period workspace 13:<span foreground="white">♫</span>

bindsym $ms+F1 workspace F1
bindsym $ms+Shift+F1 move container to workspace F1

bindsym $ms+F2 workspace F2
bindsym $ms+Shift+F2 move container to workspace F2

bindsym $ms+F3 workspace F3
bindsym $ms+Shift+F3 move container to workspace F3

bindsym $ms+F4 workspace F4
bindsym $ms+Shift+F4 move container to workspace F4

bindsym $ms+F5 workspace F5
bindsym $ms+Shift+F5 move container to workspace F5

bindsym $ms+F6 workspace F6
bindsym $ms+Shift+F6 move container to workspace F6

bindsym $ms+F7 workspace F7
bindsym $ms+Shift+F7 move container to workspace F7

bindsym $ms+F8 workspace F8
bindsym $ms+Shift+F8 move container to workspace F8

bindsym $ms+F9 workspace F9
bindsym $ms+Shift+F9 move container to workspace F9

# bindsym $ms+Shift+apostrophe move container to workspace 11
bindsym $ms+Shift+comma move container to workspace 12:ﬃ
bindsym $ms+Shift+period move container to workspace 13:<span foreground="white">♫</span>

#volume

bindsym Mod1+r exec amixer set Master 5%+ -D pulse && amixer get Master -D pulse | egrep -o '([0-9]+)%' | egrep -o '[0-9]+' | xargs -0 volnoti-show
bindsym Mod1+c exec amixer set Master 5%- -D pulse && amixer get Master -D pulse | egrep -o '([0-9]+)%' | egrep -o '[0-9]+' | xargs -0 volnoti-show
#bindsym XF86AudioMute exec amixer -q set Master toggle


# keybinding to do all startup stuff

bindsym $ms+Shift+g --release exec bash ~/s/startup.sh
bindsym $ms+g --release exec xmodmap ~/s/mod4

# Running programs
    bindsym Mod3+a exec ~/s/p/firefox/firefox
    bindsym Mod3+e exec thunar

# Terminal programs
# Todo: in own workspace
    #bindsym Mod3+n exec --no-startup-id i3-msg "exec urxvt -hold -e  newsbeuter"
    #bindsym Mod3+m exec --no-startup-id i3-msg "exec urxvt -e mutt "
    #bindsym Mod3+equal exec "urxvt -name scratchpad -e vim __scratchpad"
    #bindsym Mod3+Shift+t exec "urxvt -name todo -e vim T"
    #bindsym Mod3+n exec --no-startup-id i3-msg "exec urxvt -name news -hold -e  newsbeuter"

# Timers
        bindsym Mod3+n exec ": > ~/s/sounds/outpomo && utimer -c 15m > ~/s/sounds/outpomo && mpg123 ~/s/sounds/tib.mp3"
        bindsym Mod3+Shift+s exec ": > ~/s/sounds/outpause && utimer -c 5m > ~/s/sounds/outpause && mpg123 ~/s/sounds/cl.mp3"
        bindsym Mod3+k exec "killall mpg123"

# Screenshots
        bindsym Mod3+s --release exec scrot -s -e 'mv $f ~/s/screenshots && nomacs ~/s/screenshots/$f'
        bindsym Print --release exec scrot 

# Moving 
        bindsym Mod3+$left workspace prev
        bindsym Mod3+$right workspace next

#Random

        for_window [class="(?i)pavucontrol"] floating enable, move position mouse
        for_window [class="(?i)pavucontrol" instance="pavucontrol-bar"] move down 34 px
        for_window [class="nomacs"] floating enable, move position mouse

#https://github.com/Airblader/dotfiles-manjaro/blob/master/.i3/config
        for_window [window_role="pop-up"] floating enable
        for_window [window_role="bubble"] floating enable
        for_window [window_role="task_dialog"] floating enable
        for_window [window_role="Preferences"] floating enable

        for_window [window_type="dialog"] floating enable
        for_window [window_type="menu"] floating enable

        assign [class="^URxvt$" instance="^irssi$"] → 3
        assign [class="Conky" title="whatever"] workspace 1

        bindsym uring exec xdotool click 1
        bindsym Mod1+$ms+m move workspace to output left

        #no header by default
        for_window [class="^.*"] border pixel 1
        for_window [class="^.*"] border pixel 0

# Work-play mode
# play mode is with gaps, work is without them

# work
bindsym Mod3+w exec feh --bg-scale ~/s/bg/darkwood.jpg; gaps inner all minus 10
bindsym Mod3+Shift+w gaps inner current minus 10

# play
bindsym Mod3+p exec feh --bg-scale ~/s/bg/wallpaper.jpg; gaps inner all plus 10
bindsym Mod3+Shift+p gaps inner current plus 10
bindsym Mod3+Shift+f gaps inner current set 0

hide_edge_borders both #<none|vertical|horizontal|both>


# play/pause toggle
#bindsym Mod3+Shift+XF86AudioPlay exec cmus-remote -u
# next
#bindsym Mod3+XF86AudioNext exec cmus-remote -r
# prev
#bindsym Mod3+Shift+XF86AudioPrev exec cmus-remote -n

#autostart

exec ~/s/startup.sh


# Tesing i3-gaps
#
#gaps outer 3
gaps inner 10

# Service programs
#    bindsym Mod3+p exec pavucontrol
#bindsym Print --release exec scrot -s -e 'mv $f /tmp/ && nomacs /tmp/$f'
#bindsym Print --release exec scrot -s -e 'mv $f ~/s/screenshots && nomacs ~/s/screenshots/$f'

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym Mod3+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
